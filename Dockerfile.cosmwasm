# To build the DJuno image, just run:
# > docker build -t bdjuno .
#
# In order to work properly, this Docker container needs to have a volume that:
# - as source points to a directory which contains a config.yaml file
# - as destination it points to the /home folder
#
# Simple usage with a mounted data directory (considering ~/.bdjuno/config as the configuration folder):
# > docker run -it -v ~/.bdjuno/config:/home djuno djuno parse
#
# If you want to run this container as a daemon, you can do so by executing
# > docker run -td -v ~/.bdjuno/config:/home --name bdjuno bdjuno
#
# Once you have done so, you can enter the container shell by executing
# > docker exec -it bdjuno bash
#
# To exit the bash, just execute
# > exit
FROM golang:1.21.5-alpine3.18 AS builder
RUN apk update && apk add --no-cache make git
WORKDIR /go/src/github.com/forbole/bdjuno
COPY . ./

RUN apk update && apk add --no-cache ca-certificates build-base git

# See https://github.com/CosmWasm/wasmvm/releases
ADD https://github.com/CosmWasm/wasmvm/releases/download/v1.4.1/libwasmvm_muslc.aarch64.a /lib/libwasmvm_muslc.aarch64.a
RUN sha256sum /lib/libwasmvm_muslc.aarch64.a | grep a8259ba852f1b68f2a5f8eb666a9c7f1680196562022f71bb361be1472a83cfd

ADD https://github.com/CosmWasm/wasmvm/releases/download/v1.4.1/libwasmvm_muslc.x86_64.a /lib/libwasmvm_muslc.x86_64.a
RUN sha256sum /lib/libwasmvm_muslc.x86_64.a | grep 324c1073cb988478d644861783ed5a7de21cfd090976ccc6b1de0559098fbbad
## Copy the library you want to the final location that will be found by the linker flag `-lwasmvm_muslc`
RUN cp /lib/libwasmvm_muslc.$(uname -m).a /lib/libwasmvm_muslc.a
RUN go mod download
RUN LINK_STATICALLY=true BUILD_TAGS="muslc" make build

FROM alpine:latest
# Set up dependencies
RUN apk update && apk add --no-cache ca-certificates build-base
WORKDIR /bdjuno

# Copy the binary
COPY --from=builder /go/src/github.com/forbole/bdjuno/build/bdjuno /usr/bin/bdjuno

CMD [ "bdjuno" ]